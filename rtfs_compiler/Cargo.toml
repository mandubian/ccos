[package]
name = "rtfs_compiler"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <you@example.com>"]
description = "RTFS Compiler - Runtime-First Scripting Language Compiler"
license = "MIT"
repository = "https://github.com/yourusername/rtfs-compiler"

[features]
default = ["pest", "regex"]
# Parser (pest grammar + derives)
pest = ["dep:pest", "dep:pest_derive"]
# Regex-based intent extraction & validators
regex = ["dep:regex"]
# REPL (line editing)
repl = ["dep:rustyline"]
# Local models with CUDA support
cuda = []
# New effect boundary for typed host calls - now the only way to do stateful operations
effect-boundary = []
metrics_exporter = []

[[bin]]
name = "rtfs_compiler"
path = "src/bin/rtfs_compiler.rs"

[[bin]]
name = "rtfs-repl"
path = "src/bin/rtfs_repl.rs"
required-features = ["repl"]

[[bin]]
name = "rtfs-ccos-repl"
path = "src/bin/rtfs_ccos_repl.rs"
required-features = ["repl"]

[[bin]]
name = "github_issue_manager"
path = "src/bin/github_issue_manager.rs"

[[bin]]
name = "arbiter_rtfs_graph_demo_live"
path = "examples/arbiter_rtfs_graph_demo_live.rs"

[[bin]]
name = "ccos-viewer"
path = "src/viewer/main.rs"

[[bin]]
name = "diagnose_storage"
path = "src/bin/diagnose_storage.rs"

[dependencies]
# Parser dependencies
pest = { version = "2.7", optional = true }
pest_derive = { version = "2.7", optional = true }
regex = { version = "1.10", optional = true }

# Runtime dependencies
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
itertools = "0.12"
lazy_static = "1.4"
chrono = "0.4"
ordered-float = "3.7"
validator = { version = "0.18.1", features = ["derive"] }
schemars = "0.8.21"
toml = "0.8"
jsonschema = "0.18"
sha2 = "0.10"
rusqlite = { version = "0.29", features = ["bundled"] }

# Networking/API
reqwest = { version = "0.11", features = ["json", "blocking"] }
tokio = { version = "1.0", features = ["full"] }
uuid = { version = "1.0", features = ["v4"] }
url = "2.5"  # Add URL dependency for type validation
atty = "0.2"  # For stdin detection in input handling
# Remove explicit hyper dependency to avoid version mismatches with workspace
# axum brings the compatible hyper version as needed. Enable axum's server
# feature below so we can run an HTTP server from the example binary.

# MCP (Model Context Protocol) dependencies - using tokio directly
# rmcp = { version = "0.3.0", features = ["client", "server", "transport-child-process"] }

# REPL dependencies
clap = { version = "4.0", features = ["derive"] }
rustyline = { version = "13.0", optional = true }

# Utilities
indexmap = "2.0"
llama_cpp = { version = "0.3.2", optional = true }
num_cpus = "1.17.0"

# Caching dependencies
rand = "0.8"
dashmap = "5.5"

# Wasmtime dependency
wasmtime = "13"

# Flate2 dependency
flate2 = "1.0"

# Bincode dependency
bincode = "1.3"

# Async-trait dependency
async-trait = "0.1"

futures = "0.3"

# TUI Visualization
ratatui = { version = "0.26" }
crossterm = { version = "0.27" }

# Web server and websockets
axum = { version = "0.7", features = ["ws"] }

# Add hyper explicitly to control version used for Server
tokio-tungstenite = { version = "0.23", features = ["native-tls"] }
tower-http = { version = "0.5", features = ["fs"] }

# Redis for host state services
redis = { version = "0.25", features = ["tokio-comp", "connection-manager"] }

[dev-dependencies]
pretty_assertions = "1.4.0"
wat = "1.0"
tempfile = "3.8"
filetime = "0.2"

[[example]]
name = "hierarchical_context_demo"
path = "examples/hierarchical_context_demo.rs"

[[example]]
name = "context_types_demo"
path = "examples/context_types_demo.rs"

[[example]]
name = "mcp_introspection_demo"
path = "examples/mcp_introspection_demo.rs"

[build-dependencies]
tokio = { version = "1", features = ["full"] }
async-trait = "0.1"

# Test configurations for organized test structure
[[test]]
name = "rtfs_only_tests"
path = "tests/rtfs-only/mod.rs"

# Test configurations for organized test structure
[[test]]
name = "ccos_integration_tests"
path = "tests/ccos-integration/mod.rs"

[[test]]
name = "shared_tests"
path = "tests/shared/mod.rs"
