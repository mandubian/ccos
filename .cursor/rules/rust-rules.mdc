---
description: rust rules for the project
globs:
alwaysApply: true
---
rules:
  - id: rust-use-semicolons
    description: "Ensure statements are terminated with semicolons except for tail expressions in blocks."
    pattern: |
      $EXPR
    condition: |
      not is_tail_expression($EXPR)
    message: "Statements in Rust must be terminated with a semicolon."
    severity: warning

  - id: rust-unwrap-usage
    description: "Discourage use of unwrap() and expect() on Result/Option types."
    pattern: |
      $VAL.unwrap()
    message: "Avoid using unwrap(); handle errors explicitly."
    severity: warning

  - id: rust-missing-doc-comments
    description: "Public items should have documentation comments."
    pattern: |
      pub $ITEM $NAME $REST
    condition: |
      not has_doc_comment($ITEM)
    message: "Public item is missing a documentation comment."
    severity: info

  - id: rust-unused-mut
    description: "Detect variables declared as mutable but never mutated."
    pattern: |
      let mut $VAR = $VAL;
    condition: |
      not is_mutated($VAR)
    message: "Variable is declared as mutable but never mutated."
    severity: warning

  - id: rust-inefficient-string-concat
    description: "Suggest using format! macro for string concatenation."
    pattern: |
      $A.to_string() + $B
    message: "Consider using format! macro for string concatenation."
    severity: info

  - id: rust-avoid-clone
    description: "Warn when .clone() is used unnecessarily."
    pattern: |
      $VAL.clone()
    condition: |
      not is_required_clone($VAL)
    message: "Avoid unnecessary .clone(); prefer borrowing or references."
    severity: info

  - id: rust-struct-field-privacy
    description: "Warn if struct fields are public without need."
    pattern: |
      pub struct $NAME { pub $FIELD: $TYPE, $REST }
    message: "Struct field is public; consider making it private and using getter/setter methods."
    severity: info

  - id: rust-async-await
    description: "Encourage use of async/await for asynchronous code."
    pattern: |
      $FUTURE.wait()
    message: "Consider using async/await syntax instead of .wait()."
    severity: info

  - id: rust-vec-init
    description: "Suggest using Vec::with_capacity when capacity is known."
    pattern: |
      let mut $VEC = Vec::new();
    condition: |
      is_capacity_known($VEC)
    message: "Use Vec::with_capacity when the capacity is known in advance."
    severity: info

  - id: rust-match-exhaustiveness
    description: "Warn if match statements are not exhaustive."
    pattern: |
      match $EXPR { $ARMS }
    condition: |
      not is_exhaustive($EXPR, $ARMS)
    message: "Match statement is not exhaustive; consider handling all cases."
    severity: warning

  - id: rust-specific-test
    description: "Run specific tests for the project."
    pattern: |
      cargo test --test custom_tests -- --option1 --option2 
    message: "Run custom tests for the project."
    severity: info

