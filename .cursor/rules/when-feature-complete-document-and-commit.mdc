---
alwaysApply: true
---

# When Feature Complete: Document and Commit if needed

## 🚀 **Documentation and Commit Rule**

A complete feature is not a tiny update or a small fix. It is a significant addition or change to the codebase that enhances functionality, performance, or usability.

When you have successfully implemented and tested a complete feature, not a tiny update, you MUST:

### 1. **Document First** 📝
- **Update relevant documentation** immediately after feature completion
- **Add comprehensive comments** to the code explaining the implementation
- **Update SPEC files** spec files for CCOS are in docs/ccos/specs and for RTFS-2.0 in docs/rtfs-2.0/specs
- **Update README files** if the feature affects user-facing functionality
- **Update progress reports** (like WORKTREE_PROGRESS.md) with completion status
- **Add usage examples** if the feature is user-facing in docs/ccos/guides or docs/rtfs-2.0/guides, never in root direct

### 2. **Commit when you think it is meaningful to commit** 💾
- **DO NOT wait** until the end of a PR or issue to commit
- **Commit as soon as** the feature is implemented and tested
- **Use descriptive commit messages** that explain what was implemented
- **Include test results** in commit messages if relevant
- **Reference issue numbers** in commit messages when applicable

